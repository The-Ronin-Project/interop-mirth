name: Mirth Channel IT
on:
  push:
    branches: [ main ]
  pull_request:

jobs:
  build:
    runs-on: self-hosted

    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: 17
          distribution: zulu
      - uses: actions/setup-node@v3
        with:
          node-version: 16
      - name: Install DataDog CI
        run:
          npm install -g @datadog/datadog-ci
      - uses: gradle/gradle-build-action@v2
      - name: Install Docker Compose
        run: |
          sudo mkdir -p /etc/apt/keyrings
          curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /etc/apt/keyrings/docker.gpg
          echo "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable" | sudo tee /etc/apt/sources.list.d/docker.list > /dev/null
          sudo apt-get update
          sudo apt-get install docker-compose-plugin

      - name: Prepare dev-env
        run: |
          mkdir mirth-channel-config/dev-env/appdata
          mkdir mirth-channel-config/dev-env/interop
          chmod -R +rwx mirth-channel-config/dev-env

      - name: Stand up Mirth environment
        run: ./gradlew :mirth-channel-config:mirth
        env:
          AIDBOX_CLIENT_ID: client
          AIDBOX_CLIENT_SECRET: secret
          AIDBOX_LICENSE_ID: ${{ secrets.ORG_AIDBOX_LICENSE_ID }}
          AIDBOX_LICENSE_KEY: ${{ secrets.ORG_AIDBOX_LICENSE_KEY }}
          SEKI_AUTH_CLIENT_ID: ${{ secrets.SEKI_AUTH_CLIENT_ID }}
          SEKI_AUTH_CLIENT_SECRET: ${{ secrets.SEKI_AUTH_CLIENT_SECRET }}
          AO_SANDBOX_KEY: ${{ secrets.AO_SANDBOX_KEY }}

      - name: Run tests
        run: ./gradlew :mirth-channel-config:it --info --stacktrace

      - name: Archive integration test output
        if: success() || failure()
        uses: actions/upload-artifact@v3
        with:
          name: test-results
          path: /runner/_work/mirth-channel-config/mirth-channel-config/build/tests

      - name: Upload report to DataDog
        if: always() && !cancelled()
        env:
          DD_ENV: ci
          DATADOG_SITE: datadoghq.com
          DATADOG_API_KEY: ${{ secrets.DATADOG_API_KEY }}
        run: datadog-ci junit upload --service mirth-channel-it ./mirth-channel-config/build/test-results/it
