<channel version="3.11.0">
  <id>735716c7-fbd9-4c9c-b7e2-f33153fda6c2</id>
  <nextMetaDataId>5</nextMetaDataId>
  <name>PatientLoad</name>
  <description>Version 1.0.0.

Uses a set list of locations to find patients with upcoming appointments and triggers the nightly load</description>
  <revision>4</revision>
  <sourceConnector version="3.11.0">
    <metaDataId>0</metaDataId>
    <name>sourceConnector</name>
    <properties class="com.mirth.connect.connectors.js.JavaScriptReceiverProperties" version="3.11.0">
      <pluginProperties/>
      <pollConnectorProperties version="3.11.0">
        <pollingType>TIME</pollingType>
        <pollOnStart>true</pollOnStart>
        <pollingFrequency>5000</pollingFrequency>
        <pollingHour>2</pollingHour>
        <pollingMinute>30</pollingMinute>
        <cronJobs/>
        <pollConnectorPropertiesAdvanced>
          <weekly>true</weekly>
          <inactiveDays>
            <boolean>false</boolean>
            <boolean>false</boolean>
            <boolean>false</boolean>
            <boolean>false</boolean>
            <boolean>false</boolean>
            <boolean>false</boolean>
            <boolean>false</boolean>
            <boolean>false</boolean>
          </inactiveDays>
          <dayOfMonth>1</dayOfMonth>
          <allDay>true</allDay>
          <startingHour>8</startingHour>
          <startingMinute>0</startingMinute>
          <endingHour>17</endingHour>
          <endingMinute>0</endingMinute>
        </pollConnectorPropertiesAdvanced>
      </pollConnectorProperties>
      <sourceConnectorProperties version="3.11.0">
        <responseVariable>None</responseVariable>
        <respondAfterProcessing>true</respondAfterProcessing>
        <processBatch>false</processBatch>
        <firstResponse>false</firstResponse>
        <processingThreads>1</processingThreads>
        <resourceIds class="linked-hash-map">
          <entry>
            <string>206087b7-266c-464f-af3b-7477264b3b89</string>
            <string>Interop</string>
          </entry>
        </resourceIds>
        <queueBufferSize>1000</queueBufferSize>
      </sourceConnectorProperties>
      <script>return sourceReader()</script>
    </properties>
    <transformer version="3.11.0">
      <elements>
        <com.mirth.connect.plugins.javascriptstep.JavaScriptStep version="3.11.0">
          <name>Source Transform</name>
          <sequenceNumber>0</sequenceNumber>
          <enabled>true</enabled>
          <script>sourceTransform()</script>
        </com.mirth.connect.plugins.javascriptstep.JavaScriptStep>
      </elements>
      <inboundTemplate encoding="base64"></inboundTemplate>
      <outboundTemplate encoding="base64"></outboundTemplate>
      <inboundDataType>RAW</inboundDataType>
      <outboundDataType>RAW</outboundDataType>
      <inboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.11.0">
        <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.11.0">
          <splitType>JavaScript</splitType>
          <batchScript></batchScript>
        </batchProperties>
      </inboundProperties>
      <outboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.11.0">
        <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.11.0">
          <splitType>JavaScript</splitType>
          <batchScript></batchScript>
        </batchProperties>
      </outboundProperties>
    </transformer>
    <filter version="3.11.0">
      <elements/>
    </filter>
    <transportName>JavaScript Reader</transportName>
    <mode>SOURCE</mode>
    <enabled>true</enabled>
    <waitForPrevious>true</waitForPrevious>
  </sourceConnector>
  <destinationConnectors>
    <connector version="3.11.0">
      <metaDataId>1</metaDataId>
      <name>Publish Patient</name>
      <properties class="com.mirth.connect.connectors.js.JavaScriptDispatcherProperties" version="3.11.0">
        <pluginProperties/>
        <destinationConnectorProperties version="3.11.0">
          <queueEnabled>false</queueEnabled>
          <sendFirst>false</sendFirst>
          <retryIntervalMillis>10000</retryIntervalMillis>
          <regenerateTemplate>false</regenerateTemplate>
          <retryCount>0</retryCount>
          <rotate>false</rotate>
          <includeFilterTransformer>false</includeFilterTransformer>
          <threadCount>1</threadCount>
          <threadAssignmentVariable></threadAssignmentVariable>
          <validateResponse>false</validateResponse>
          <resourceIds class="linked-hash-map">
            <entry>
              <string>206087b7-266c-464f-af3b-7477264b3b89</string>
              <string>Interop</string>
            </entry>
          </resourceIds>
          <queueBufferSize>1000</queueBufferSize>
          <reattachAttachments>true</reattachAttachments>
        </destinationConnectorProperties>
        <script>return destinationWriter(&quot;publish&quot;);</script>
      </properties>
      <transformer version="3.11.0">
        <elements>
          <com.mirth.connect.plugins.javascriptstep.JavaScriptStep version="3.11.0">
            <name>Tranform to Ronin Patient</name>
            <sequenceNumber>0</sequenceNumber>
            <enabled>true</enabled>
            <script>destinationTransform(&quot;publish&quot;);</script>
          </com.mirth.connect.plugins.javascriptstep.JavaScriptStep>
        </elements>
        <inboundTemplate encoding="base64"></inboundTemplate>
        <outboundTemplate encoding="base64"></outboundTemplate>
        <inboundDataType>RAW</inboundDataType>
        <outboundDataType>RAW</outboundDataType>
        <inboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.11.0">
          <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.11.0">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </inboundProperties>
        <outboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.11.0">
          <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.11.0">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </outboundProperties>
      </transformer>
      <responseTransformer version="3.11.0">
        <elements/>
        <inboundDataType>RAW</inboundDataType>
        <outboundDataType>RAW</outboundDataType>
        <inboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.11.0">
          <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.11.0">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </inboundProperties>
        <outboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.11.0">
          <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.11.0">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </outboundProperties>
      </responseTransformer>
      <filter version="3.11.0">
        <elements/>
      </filter>
      <transportName>JavaScript Writer</transportName>
      <mode>DESTINATION</mode>
      <enabled>true</enabled>
      <waitForPrevious>true</waitForPrevious>
    </connector>
  </destinationConnectors>
  <preprocessingScript>// Modify the message variable below to pre process data
return message;</preprocessingScript>
  <postprocessingScript>// This script executes once after a message has been processed
// Responses returned from here will be stored as &quot;Postprocessor&quot; in the response map
return;</postprocessingScript>
  <deployScript>// @apiinfo &quot;&quot;&quot;Get the channel configuration and services.&quot;&quot;&quot;

var channelService = Packages.com.projectronin.interop.mirth.channel.PatientLoad.Companion.create();
onDeploy(channelService)
</deployScript>
  <undeployScript>// This script executes once when the channel is undeployed
// You only have access to the globalMap and globalChannelMap here to persist data
return;</undeployScript>
  <properties version="3.11.0">
    <clearGlobalChannelMap>true</clearGlobalChannelMap>
    <messageStorageMode>DEVELOPMENT</messageStorageMode>
    <encryptData>false</encryptData>
    <removeContentOnCompletion>false</removeContentOnCompletion>
    <removeOnlyFilteredOnCompletion>false</removeOnlyFilteredOnCompletion>
    <removeAttachmentsOnCompletion>false</removeAttachmentsOnCompletion>
    <initialState>STARTED</initialState>
    <storeAttachments>false</storeAttachments>
    <metaDataColumns>
      <metaDataColumn>
        <name>TENANT</name>
        <type>STRING</type>
        <mappingName>tenantMnemonic</mappingName>
      </metaDataColumn>
      <metaDataColumn>
        <name>FHIRID</name>
        <type>STRING</type>
        <mappingName>fhirID</mappingName>
      </metaDataColumn>
    </metaDataColumns>
    <attachmentProperties version="3.11.0">
      <type>None</type>
      <properties/>
    </attachmentProperties>
    <resourceIds class="linked-hash-map">
      <entry>
        <string>206087b7-266c-464f-af3b-7477264b3b89</string>
        <string>Interop</string>
      </entry>
    </resourceIds>
  </properties>
  <exportData>
    <metadata>
      <enabled>false</enabled>
      <lastModified>
        <time>1674846053768</time>
        <timezone>America/Chicago</timezone>
      </lastModified>
      <pruningSettings>
        <pruneMetaDataDays>60</pruneMetaDataDays>
        <archiveEnabled>true</archiveEnabled>
      </pruningSettings>
    </metadata>
    <codeTemplateLibraries>
      <codeTemplateLibrary version="3.11.0">
        <id>fc461d5a-b070-422f-b1c6-c5aa4256eed6</id>
        <name>Standard Functions</name>
        <revision>1</revision>
        <lastModified>
          <time>1674845269809</time>
          <timezone>Etc/UTC</timezone>
        </lastModified>
        <includeNewChannels>true</includeNewChannels>
        <enabledChannelIds>
          <string>698bd306-9112-4d77-baa6-c15b1462f67f</string>
          <string>ronin-ea1af8ef-ab0e-469f-8011-c43917</string>
          <string>ea1af8ef-ab0e-469f-8011-c43917cb3bcf</string>
          <string>14ca4dbf-5e1d-4760-a978-fd56b2562ecc</string>
          <string>1ad1b43a-207d-4efa-bc96-3c19bde2b7a5</string>
          <string>ronin-1ad1b43a-207d-4efa-bc96-3c19bd</string>
          <string>ronin-26ab27c7-31b7-4c61-9403-6f4e61</string>
          <string>ronin-0f0aec05-3c59-4fd5-8b60-b0d9c4</string>
          <string>ronin-d90aa9f3-b609-4067-b715-9a0b34</string>
          <string>9da3eedc-7405-4805-899c-9b9e4c55260c</string>
          <string>50968316-2e13-41f7-b5dd-1d6a46d17c62</string>
          <string>d90aa9f3-b609-4067-b715-9a0b348228fb</string>
          <string>ronin-14ca4dbf-5e1d-4760-a978-fd56b2</string>
          <string>26ab27c7-31b7-4c61-9403-6f4e61b789e0</string>
          <string>0f0aec05-3c59-4fd5-8b60-b0d9c441e6ed</string>
          <string>6b98c9ba-262f-44e9-8370-f662e5db4fba</string>
        </enabledChannelIds>
        <disabledChannelIds/>
        <codeTemplates>
          <codeTemplate version="3.11.0">
            <id>e1d808c8-23b1-4ccc-aa36-9a42e92b4776</id>
            <name>Destination Filter</name>
            <revision>1</revision>
            <lastModified>
              <time>1674845269079</time>
              <timezone>Etc/UTC</timezone>
            </lastModified>
            <contextSet>
              <delegate>
                <contextType>DESTINATION_FILTER_TRANSFORMER</contextType>
                <contextType>DESTINATION_RESPONSE_TRANSFORMER</contextType>
                <contextType>SOURCE_FILTER_TRANSFORMER</contextType>
                <contextType>SOURCE_RECEIVER</contextType>
                <contextType>DESTINATION_DISPATCHER</contextType>
              </delegate>
            </contextSet>
            <properties class="com.mirth.connect.model.codetemplates.BasicCodeTemplateProperties">
              <type>FUNCTION</type>
              <code>/**
	Standard Destination Filter

	@param {String} destinationName - the key to lookup the destination name by
	@return {Boolean}
*/
function destinationFilter(destinationName) {
	var filtered = $gc(&quot;channelService&quot;).destinations.get(destinationName).destinationFilter(channelName, msg, sourceMap, channelMap)
	channelMap.putAll(filtered.dataMap);
	return filtered.result;
}</code>
            </properties>
          </codeTemplate>
          <codeTemplate version="3.11.0">
            <id>e0751f00-ebe9-47a3-8402-2d25e155c899</id>
            <name>Destination Transform</name>
            <revision>1</revision>
            <lastModified>
              <time>1674845269211</time>
              <timezone>Etc/UTC</timezone>
            </lastModified>
            <contextSet>
              <delegate>
                <contextType>DESTINATION_FILTER_TRANSFORMER</contextType>
                <contextType>DESTINATION_RESPONSE_TRANSFORMER</contextType>
                <contextType>SOURCE_FILTER_TRANSFORMER</contextType>
                <contextType>SOURCE_RECEIVER</contextType>
                <contextType>DESTINATION_DISPATCHER</contextType>
              </delegate>
            </contextSet>
            <properties class="com.mirth.connect.model.codetemplates.BasicCodeTemplateProperties">
              <type>FUNCTION</type>
              <code>/**
	Standard Destination Transform

	@param {String} destinationName - the key to lookup the destination name by
*/
function destinationTransform(destinationName) {
	var transformedMessage = $gc(&quot;channelService&quot;).destinations.get(destinationName).destinationTransformer(channelName, msg, sourceMap, channelMap)
	channelMap.putAll(transformedMessage.dataMap);
	msg = transformedMessage.message
}</code>
            </properties>
          </codeTemplate>
          <codeTemplate version="3.11.0">
            <id>064699d6-67d0-447d-9afe-a06fafbb875e</id>
            <name>Destination Writer</name>
            <revision>1</revision>
            <lastModified>
              <time>1674845269289</time>
              <timezone>Etc/UTC</timezone>
            </lastModified>
            <contextSet>
              <delegate>
                <contextType>DESTINATION_FILTER_TRANSFORMER</contextType>
                <contextType>DESTINATION_RESPONSE_TRANSFORMER</contextType>
                <contextType>SOURCE_FILTER_TRANSFORMER</contextType>
                <contextType>SOURCE_RECEIVER</contextType>
                <contextType>DESTINATION_DISPATCHER</contextType>
              </delegate>
            </contextSet>
            <properties class="com.mirth.connect.model.codetemplates.BasicCodeTemplateProperties">
              <type>FUNCTION</type>
              <code>/**
	Standard Destination Writer

	@param {String} destinationName - the key to lookup the destination name by
	@return {Response}
	
*/
function destinationWriter(destinationName) {
	var responseData = $gc(&quot;channelService&quot;).destinations.get(destinationName).destinationWriter(channelName, connectorMessage.getEncodedData(), connectorMessage.getSourceMap(), connectorMessage.getChannelMap());
	channelMap.putAll(responseData.dataMap);
	return new Response(Status.valueOf(responseData.status.toString()), responseData.detailedMessage, responseData.message);
}</code>
            </properties>
          </codeTemplate>
          <codeTemplate version="3.11.0">
            <id>0a49a2f2-efa2-4092-b3e4-771d0c9e7445</id>
            <name>On Deploy</name>
            <revision>1</revision>
            <lastModified>
              <time>1674845269340</time>
              <timezone>Etc/UTC</timezone>
            </lastModified>
            <contextSet>
              <delegate>
                <contextType>DESTINATION_FILTER_TRANSFORMER</contextType>
                <contextType>CHANNEL_BATCH</contextType>
                <contextType>CHANNEL_ATTACHMENT</contextType>
                <contextType>CHANNEL_PREPROCESSOR</contextType>
                <contextType>DESTINATION_RESPONSE_TRANSFORMER</contextType>
                <contextType>SOURCE_FILTER_TRANSFORMER</contextType>
                <contextType>SOURCE_RECEIVER</contextType>
                <contextType>CHANNEL_UNDEPLOY</contextType>
                <contextType>DESTINATION_DISPATCHER</contextType>
                <contextType>CHANNEL_DEPLOY</contextType>
                <contextType>CHANNEL_POSTPROCESSOR</contextType>
              </delegate>
            </contextSet>
            <properties class="com.mirth.connect.model.codetemplates.BasicCodeTemplateProperties">
              <type>FUNCTION</type>
              <code>/**
	Standard On Deploy
*/
function onDeploy(channelService) {
	$gc(&quot;channelService&quot;, channelService);
	var serviceMap = channelService.onDeploy(channelName, configurationMap);
	$gc(&quot;serviceMap&quot;, serviceMap);
	globalChannelMap.putAll(serviceMap)
}</code>
            </properties>
          </codeTemplate>
          <codeTemplate version="3.11.0">
            <id>5947202c-fb91-45f7-969c-d2369f34de13</id>
            <name>Source Error Check</name>
            <revision>1</revision>
            <lastModified>
              <time>1674845269397</time>
              <timezone>Etc/UTC</timezone>
            </lastModified>
            <contextSet>
              <delegate>
                <contextType>DESTINATION_FILTER_TRANSFORMER</contextType>
                <contextType>DESTINATION_RESPONSE_TRANSFORMER</contextType>
                <contextType>SOURCE_FILTER_TRANSFORMER</contextType>
                <contextType>SOURCE_RECEIVER</contextType>
                <contextType>DESTINATION_DISPATCHER</contextType>
              </delegate>
            </contextSet>
            <properties class="com.mirth.connect.model.codetemplates.BasicCodeTemplateProperties">
              <type>FUNCTION</type>
              <code>/**
	Checks for and throws any an error message from the source reader
*/
function checkForErrorMessage() {
	if(sourceMap.get(&quot;isError&quot;) == true){
		logger.error(msg)
		throw Error(msg)
	}
}</code>
            </properties>
          </codeTemplate>
          <codeTemplate version="3.11.0">
            <id>1caa5f49-4a91-4c6d-af47-5aae1dc85eb8</id>
            <name>Source Filter</name>
            <revision>1</revision>
            <lastModified>
              <time>1674845269475</time>
              <timezone>Etc/UTC</timezone>
            </lastModified>
            <contextSet>
              <delegate>
                <contextType>DESTINATION_FILTER_TRANSFORMER</contextType>
                <contextType>DESTINATION_RESPONSE_TRANSFORMER</contextType>
                <contextType>SOURCE_FILTER_TRANSFORMER</contextType>
                <contextType>SOURCE_RECEIVER</contextType>
                <contextType>DESTINATION_DISPATCHER</contextType>
              </delegate>
            </contextSet>
            <properties class="com.mirth.connect.model.codetemplates.BasicCodeTemplateProperties">
              <type>FUNCTION</type>
              <code>/**
	Standard Source Filter
	
	@return {Boolean}
*/
function sourceFilter() {
	checkForErrorMessage()	
	var filtered = $gc(&quot;channelService&quot;).sourceFilter(channelName, msg, sourceMap, channelMap)
	channelMap.putAll(filtered.dataMap);
	return filtered.result;
}</code>
            </properties>
          </codeTemplate>
          <codeTemplate version="3.11.0">
            <id>b9d0ac8a-da20-4205-bd00-04b98eb8ffb7</id>
            <name>Source Reader</name>
            <revision>1</revision>
            <lastModified>
              <time>1674845269581</time>
              <timezone>Etc/UTC</timezone>
            </lastModified>
            <contextSet>
              <delegate>
                <contextType>DESTINATION_FILTER_TRANSFORMER</contextType>
                <contextType>DESTINATION_RESPONSE_TRANSFORMER</contextType>
                <contextType>SOURCE_FILTER_TRANSFORMER</contextType>
                <contextType>SOURCE_RECEIVER</contextType>
                <contextType>DESTINATION_DISPATCHER</contextType>
              </delegate>
            </contextSet>
            <properties class="com.mirth.connect.model.codetemplates.BasicCodeTemplateProperties">
              <type>FUNCTION</type>
              <code>/**
	Stancdard Source Reader
	@return {List&lt;RawMessage&gt;} 
*/
function sourceReader() {
	try{
		return messageArrayList($gc(&quot;channelService&quot;).sourceReader(channelName, $gc(&quot;serviceMap&quot;)));
	} catch(e){
		logger.error(e.message)
		var errorMessage =  new RawMessage(e.message);
		errorMessage.setSourceMap(Maps.map(&quot;isError&quot;, true));
		return errorMessage;
	}
}

function messageArrayList(messageList) {
	var messageArrayList = new Packages.java.util.ArrayList();
	for each (var i = 0; i &lt; messageList.size(); i++) {
		var item = messageList.get(i);
		var newMessage = RawMessage(item.message);
		newMessage.setSourceMap(item.dataMap);
		messageArrayList.add(newMessage);
	}
	return messageArrayList;
}
</code>
            </properties>
          </codeTemplate>
          <codeTemplate version="3.11.0">
            <id>eaf8ca4c-56c5-432f-872a-51884dd879f4</id>
            <name>Source Transform</name>
            <revision>1</revision>
            <lastModified>
              <time>1674845269639</time>
              <timezone>Etc/UTC</timezone>
            </lastModified>
            <contextSet>
              <delegate>
                <contextType>DESTINATION_FILTER_TRANSFORMER</contextType>
                <contextType>DESTINATION_RESPONSE_TRANSFORMER</contextType>
                <contextType>SOURCE_FILTER_TRANSFORMER</contextType>
                <contextType>SOURCE_RECEIVER</contextType>
                <contextType>DESTINATION_DISPATCHER</contextType>
              </delegate>
            </contextSet>
            <properties class="com.mirth.connect.model.codetemplates.BasicCodeTemplateProperties">
              <type>FUNCTION</type>
              <code>/**
	Standard Source Transform 	
*/
function sourceTransform() {
	checkForErrorMessage()
	var transformedMessage = $gc(&quot;channelService&quot;).sourceTransformer(channelName, msg, sourceMap, channelMap);
	channelMap.putAll(transformedMessage.dataMap);
	msg = transformedMessage.message
}</code>
            </properties>
          </codeTemplate>
        </codeTemplates>
      </codeTemplateLibrary>
    </codeTemplateLibraries>
  </exportData>
</channel>